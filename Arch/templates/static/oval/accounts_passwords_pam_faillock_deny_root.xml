<def-group>
  <definition class="compliance" id="accounts_passwords_pam_faillock_deny_root" version="4">
    <metadata>
      <title>Lock out the root account after failed login attempts</title>
      <affected family="unix">
        <platform>Arch Linux</platform>
      </affected>
      <description>The root account should be configured to deny access after the number of defined
      failed attempts has been reached.</description>
    </metadata>
    <criteria>
      <criterion test_ref="test_pam_faillock_preauth_silent_system-auth"
      comment="pam_faillock.so preauth silent set in system-auth" />
    </criteria>
  </definition>

  <!-- Check for preauth silent even_deny_root in /etc/pam.d/system-auth -->
  <ind:textfilecontent54_test id="test_pam_faillock_preauth_silent_system-auth"
  check="all" check_existence="all_exist"
  comment="Check pam_faillock.so preauth silent present in /etc/pam.d/system-auth" version="1">
    <ind:object object_ref="object_pam_faillock_preauth_silent_system-auth" />
  </ind:textfilecontent54_test>

  <ind:textfilecontent54_object id="object_pam_faillock_preauth_silent_system-auth" version="1">
    <!-- Read whole /etc/pam.d/system-auth content as single line so we can verify existing order of PAM modules -->
    <ind:behaviors singleline="true" />
    <ind:filepath>/etc/pam.d/system-auth</ind:filepath>
    <!-- Since order of PAM modules matters ensure pam_faillock.so preauth silent in auth section is listed before
         pam_unix.so module in auth section -->
    <ind:pattern operation="pattern match">[\n][\s]*auth[\s]+required[\s]+pam_tally2\.so[\s]+[^\n]*even_deny_root[\s]*(?s).*[\n][\s]*auth[\s]+(?:(?:sufficient)|(?:\[.*default=die.*\])|(?:required))[\s]+pam_unix\.so[^\n]*[\n]</ind:pattern>
    <!-- Check only the first instance -->
    <ind:instance datatype="int" operation="equals">1</ind:instance>
  </ind:textfilecontent54_object>

</def-group>
